/**
 * OpenAI prompt template for generating reports
 * This ensures consistent formatting across all generated reports
 */

const getReportPrompt = ({ repository, title, dateRangeFormatted, includeCode, commitsText, branchInfo, authorInfo }) => {
  return `
Generate a clean, focused report for the GitHub repository work. Follow this exact structure:

# ${title || repository + ' Report'}

Repository: ${repository}
${branchInfo ? `Branches: ${branchInfo}` : ''}
${authorInfo ? `Authors: ${authorInfo}` : ''}
Generated: ${new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}
Date Range: ${dateRangeFormatted}

## Executive Overview

{executiveSummary}

## Major Improvements and Features

{major_improvements_section}

## Implementation Details

{implementationDetails}

## Conclusion

{conclusion}

Generated by GitStatus

INSTRUCTIONS:
1. Replace all placeholders in {curlyBraces} with appropriate content
2. Fill in the executive summary, major improvements, implementation details, and conclusion sections based on the commits data
3. DO NOT add any additional title sections before or after this format
4. Keep the structure exactly as shown with these section headings
5. Ensure "Generated by GitStatus" appears at the end
6. IMPORTANT: DO NOT list individual commits or commit details. Instead, organize changes by themes/features 
7. Focus on WHAT was accomplished, not individual commits that accomplished it
8. Group related changes together by functionality or feature area
9. Use bullet points for clarity where appropriate

Commits:
${commitsText}

Focus on business value and accomplishments. Group related commits into logical sections. Be concise and clear.
Organize by themes and features rather than individual commits.
DO NOT modify the structure of the template.
`;
};

module.exports = { getReportPrompt };
